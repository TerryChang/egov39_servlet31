<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!-- 패키지 내 Controller, Service, Repository 클래스의 auto detect를 위한 mvc 설정 -->
    <context:component-scan base-package="egovframework">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>

    <!-- 서블릿컨네이너상의 exception에 대한 오류 페이지를 연결하는 mvc 설정-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView" value="cmm/error/egovError"/>
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.dao.DataAccessException">cmm/error/dataAccessFailure</prop>
                <prop key="org.springframework.transaction.TransactionException">cmm/error/transactionFailure</prop>
                <prop key="egovframework.rte.fdl.cmmn.exception.EgovBizException">cmm/error/egovError</prop>
                <prop key="org.springframework.security.AccessDeniedException">cmm/error/accessDenied</prop>
            </props>
        </property>
    </bean>

    <!-- 화면처리용 JSP 파일명의  prefix, suffix 처리에 대한 mvc 설정  -->
    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:order="1"
	    p:viewClass="org.springframework.web.servlet.view.JstlView"
	    p:prefix="/WEB-INF/jsp/" p:suffix=".jsp"/>
    
    <mvc:annotation-driven conversion-service="conversionService">
    <!--  
        <mvc:message-converters>
             File Upload시 UploadFileVO 클래스 객체로 변환하기 위한 message converter 3종 등록 -->
            <!--  
            <bean id="multipartFileToUploadFileVOConverter" class="egovframework.mybatis.config.web.converter.MultipartFileToUploadFileVOConverter" />
            <bean id="stringToUploadFileVOConverter" class="egovframework.mybatis.config.web.converter.StringToUploadFileVOConverter" />
            <bean id="stringToMultipartFileConverter" class="egovframework.mybatis.config.web.converter.StringToMultipartFileConverter" />
        </mvc:message-converters>
        -->
    </mvc:annotation-driven>
    
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean class="org.springframework.web.servlet.mvc.WebContentInterceptor">
                <property name="cacheSeconds" value="0" />
                <!-- 현재의 cache 정책에 예외적인 url을 설정하려 할 경우 cacheMappings property 설정  -->
                <!-- 
                <property name="cacheMappings">
                    <props>
                        <prop key="/api/photo/**">86400</prop>
                    </props>
                </property>
                -->
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>
    
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean id="multipartFileToUploadFileVOConverter" class="egovframework.mybatis.config.web.converter.MultipartFileToUploadFileVOConverter">
                    <constructor-arg index="0" ref="propertiesService" />
                </bean>
            </set>
        </property>
    </bean>
    
    <!-- Servlet Context에서 사용할 환경설정 기본정보를 WEB-INF/config/egovframework/egovProps/globals.properties 에서 참조하도록 propertyConfigurer 설정  -->
    <bean id="servletPropertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>WEB-INF/config/egovframework/egovProps/globals.properties</value>
                <!-- value>file:src/main/webapp/WEB-INF/config/egovframework/egovProps/globals.properties</value -->
                <!-- value>file:/product/jeus/egovProps/globals.properties</value-->
            </list>
        </property>
    </bean>
    
    <!-- For Pagination Tag 설정--><!-- 이거는 Servlet Context로 옮기자(Paging UI는 클라이언트와 결합된거라 Root Context에 올라갈 사항이 아님) -->
    <bean id="mybatisImagePaginationRenderer" class="egovframework.mybatis.config.web.paging.MybatisImagePaginationRenderer"/><!-- 이 페이징 UI 보이는 renderer는 직접 제작 -->
    <bean id="paginationManager" class="egovframework.rte.ptl.mvc.tags.ui.pagination.DefaultPaginationManager">
        <property name="rendererType">
            <map>
                <entry key="image" value-ref="mybatisImagePaginationRenderer"/> 
            </map>
        </property>
    </bean>
    
    <!-- webjars 사용을 위한 ResourceMapping -->
    <mvc:resources location="classpath:/META-INF/resources/webjars/" mapping="/webjars/**" />
    
    <!-- MULTIPART RESOLVERS -->
    <!-- regular spring resolver -->
    <bean id="spring.RegularCommonsMultipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="1000000000" />
        <property name="maxInMemorySize" value="100000000" />
    </bean>
    <!-- Spring 3.X 버전 사용에 대한 호환성 때문에 남겨놓은듯 하다(Spring 3.X를 사용할 경우 이걸 사용하라는 의미인듯) -->
    <!-- custom multi file resolver -->   
    <bean id="local.MultiCommonsMultipartResolver" class="egovframework.cmm.web.EgovMultipartResolver">
        <property name="maxUploadSize" value="100000000" />
        <property name="maxInMemorySize" value="100000000" />
    </bean>
    <!-- choose one from above and alias it to the name Spring expects -->
    <!-- alias name="local.MultiCommonsMultipartResolver" alias="multipartResolver" /-->
    <alias name="spring.RegularCommonsMultipartResolver" alias="multipartResolver" />
    
</beans>