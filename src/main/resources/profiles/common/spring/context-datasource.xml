<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
						http://www.springframework.org/schema/jdbc  http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd">
    
    <!-- context-common.xml에 설정한 propertyConfigurer bean을 이용해서 datasource 설정 -->
    <alias name="dataSource-${Globals.DbType}" alias="dataSource" />
    <alias name="dataSource-${Globals.DbType}" alias="egov.dataSource" />
    
    <!-- 
    	기존 사용하던 Apache Common DBCP에서 HikariCP 로 수정 
    	HikariCP의 경우 보다 세세한 설정이 가능하지만 그걸 하려 할 경우엔 현재 이 파일에서 사용하는 설정방법이 아닌 별도의 방법을 써야 한다 
    	https://aljjabaegi.tistory.com/416 에서 사용하는 HikariConfig를 활용해서 HikariCP 메인홈페이지(https://github.com/brettwooldridge/HikariCP)에서 안내해주는 옵션들을 설정하는 방법을 사용한다
    	HikariCP의 경우는 jdbcUrl만 설정하는 것으로 어떤 DriverClass를 쓸 것인지를 라이브러리가 자체적으로 판단할수 있기 때문에 driverClassName을 쓰지 않아도 되지만 
    	현재 사용하는 jdbc 드라이버 기준으로 움직여야 할것 같아서 DriverClass를 명시했다.
    	단 MySQL을 사용할 경우 기존 드라이버 클래스를 사용할 경우 network timeout 옵션과 관련하여 Connection Pool의 Connection이 깨지는 상황이 벌어지고 있기 때문에 
    	HikariCP 측에서 DriverClass를 사용하지 말고	jdbcUrl만 사용하도록 권고하고 있어서 MySQL 설정에서는 driverClassName 을 사용하지 않았다 
    	HikariCP 는 autoCommit 옵션이 true이기 때문에 transaction 적용을 위해 false로 설정했다
    -->
    
    
	<!-- hsql -->
	<!-- 
    <jdbc:embedded-database id="dataSource-hsql" type="HSQL">
		<jdbc:script location= "classpath:/db/shtdb.sql"/>
	</jdbc:embedded-database>
	-->
	
 	<!-- <bean id="dataSource-hsql" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<property name="driverClassName" value="net.sf.log4jdbc.DriverSpy"/>
		<property name="jdbcUrl" value="jdbc:log4jdbc:hsqldb:hsql://localhost/sampledb"/>
		<property name="username" value="sa"/>
		<property name="autoCommit" value="false"/>
	</bean> -->
	 
	<!-- mysql -->
    <bean id="dataSource-mysql" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
    	<!-- driverClassName 주석 처리와 관련해서는 위에 설명했다 -->
        <!-- property name="driverClassName" value="${Globals.DriverClassName}"/ -->
        <property name="jdbcUrl" value="${Globals.Url}" />
        <property name="username" value="${Globals.UserName}"/>
        <property name="password" value="${Globals.Password}"/>
        <property name="autoCommit" value="false"/>
    </bean>
    
    <!-- Oracle -->
    <bean id="dataSource-oracle" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="${Globals.DriverClassName}"/>
        <property name="jdbcUrl" value="${Globals.Url}" />
        <property name="username" value="${Globals.UserName}"/>
        <property name="password" value="${Globals.Password}"/>
        <property name="autoCommit" value="false"/>
    </bean>
    
    <!-- Altibase -->
    <bean id="dataSource-altibase" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="${Globals.DriverClassName}"/>
        <property name="jdbcUrl" value="${Globals.Url}" />
        <property name="username" value="${Globals.UserName}"/>
        <property name="password" value="${Globals.Password}"/>
        <property name="maximumPoolSize" value="10"/>
        <property name="autoCommit" value="false"/>
    </bean>

    <!-- Tibero -->
    <bean id="dataSource-tibero" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="${Globals.DriverClassName}"/>
        <property name="jdbcUrl" value="${Globals.Url}" />
        <property name="username" value="${Globals.UserName}"/>
        <property name="password" value="${Globals.Password}"/>
        <property name="autoCommit" value="false"/>
    </bean>
	
	<!-- cubrid -->
    <bean id="dataSource-cubrid" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="${Globals.DriverClassName}"/>
        <property name="jdbcUrl" value="${Globals.Url}" />
        <property name="username" value="${Globals.UserName}"/>
        <property name="password" value="${Globals.Password}"/>
        <property name="autoCommit" value="false"/>
    </bean>
    
    <!-- postgresql -->
    <bean id="dataSource-postgresql" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="${Globals.DriverClassName}"/>
        <property name="jdbcUrl" value="${Globals.Url}" />
        <property name="username" value="${Globals.UserName}"/>
        <property name="password" value="${Globals.Password}"/>
        <property name="autoCommit" value="false"/>
    </bean>
    
    <!-- log4jdbc -->
    <bean id="dataSource-log4jdbc" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="${Globals.DriverClassName}"/>
        <property name="jdbcUrl" value="${Globals.Url}" />
        <property name="username" value="${Globals.UserName}"/>
        <property name="password" value="${Globals.Password}"/>
        <property name="autoCommit" value="false"/>
    </bean>
</beans>
